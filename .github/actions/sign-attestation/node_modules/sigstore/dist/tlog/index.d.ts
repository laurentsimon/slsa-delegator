/// <reference types="node" />
import { Bundle, Envelope } from '../types/bundle';
import { SignatureMaterial } from '../types/signature';
export { Entry, EntryKind, HashedRekordKind } from './types';
export interface TLog {
    createMessageSignatureEntry: (digest: Buffer, sigMaterial: SignatureMaterial) => Promise<Bundle>;
    createDSSEEntry: (envelope: Envelope, sigMaterial: SignatureMaterial) => Promise<Bundle>;
}
export interface TLogClientOptions {
    rekorBaseURL: string;
}
export declare class TLogClient implements TLog {
    private rekor;
    constructor(options: TLogClientOptions);
    createMessageSignatureEntry(digest: Buffer, sigMaterial: SignatureMaterial): Promise<Bundle>;
    createDSSEEntry(envelope: Envelope, sigMaterial: SignatureMaterial): Promise<Bundle>;
}
