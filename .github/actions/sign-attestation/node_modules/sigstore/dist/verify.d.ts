/// <reference types="node" />
/// <reference types="node" />
import { KeyObject } from 'crypto';
import { TLog } from './tlog';
import { Bundle } from './types/bundle';
export type GetPublicKeyFunc = (keyId: string) => Promise<string | undefined>;
export interface VerifyOptions {
    tlog: TLog;
    tlogKeys: Record<string, KeyObject>;
    getPublicKey?: GetPublicKeyFunc;
}
export declare class Verifier {
    private tlog;
    private tlogKeys;
    private getExternalPublicKey;
    constructor(options: VerifyOptions);
    verifyOffline(bundle: Bundle, data?: Buffer): Promise<void>;
    getPublicKey(bundle: Bundle): Promise<string>;
}
